<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
			http://www.springframework.org/schema/beans/spring-beans.xsd ">
    <!-- 自动扫描(自动注入) -->

    <bean id="departTiming" class="com.yhhis.common.timing.service.impl.DepartTiming"></bean>

    <bean id="mappingJackson2HttpMessageConverter"
          class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>

    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="mappingJackson2HttpMessageConverter"/>
            </list>
        </property>
    </bean>


    <bean id="executorpool"
          class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <!-- 核心线程数 线程池维护线程的最少数量 -->
        <property name="corePoolSize" value="100"/>
        <!-- 线程池维护线程所允许的空闲时间 -->
        <property name="keepAliveSeconds" value="200"/>
        <!-- 线程池维护线程的最大数量 -->
        <property name="maxPoolSize" value="100"/>
        <!-- 线程池所使用的缓冲队列 -->
        <property name="queueCapacity" value="2000"/>
        <!-- 线程池对拒绝任务(无线程可用)的处理策略 ThreadPoolExecutor.CallerRunsPolicy策略 ,调用者的线程会执行该任务,如果执行器已关闭,则丢弃.  -->
        <property name="rejectedExecutionHandler">
            <bean class="java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy"/>
        </property>
    </bean>

    <bean id="departtimingJobDetailExecute"
          class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <!-- 指定任务类 -->
        <property name="targetObject" ref="departTiming"/>
        <!-- 指定任务执行的方法 -->
        <property name="targetMethod" value="refund"/>
    </bean>
    <bean id="departtimingJobDetailExecute2"
          class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <!-- 指定任务类 -->
        <property name="targetObject" ref="departTiming"/>
        <!-- 指定任务执行的方法 -->
        <property name="targetMethod" value="Modifystatus"/>
    </bean>

    <bean id="departtimingExecuteTrigger"
          class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="departtimingJobDetailExecute"/>
        <!-- 每下午17点运行一次   0 0 0 * * ? -->
        <property name="cronExpression" value="0 0 17 * * ?"/>
    </bean>
    <bean id="departtimingExecuteTrigger2"
          class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="departtimingJobDetailExecute2"/>
        <!-- 每中午12点运行一次   0 0 0 * * ? -->
        <property name="cronExpression" value="0 0 12 * * ?"/>
    </bean>
    <!--&lt;!&ndash; 定时end &ndash;&gt;-->
    <!--&lt;!&ndash; 定时删除未支付订单开始 (暂时没用-可根据逻辑去方法里写)&ndash;&gt;-->
    <!--<bean id="departtimingJobDetailExecute2"-->
    <!--class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">-->
    <!--&lt;!&ndash; 指定任务类 &ndash;&gt;-->
    <!--<property name="targetObject" ref="departTiming"/>-->
    <!--&lt;!&ndash; 指定任务执行的方法 &ndash;&gt;-->
    <!--<property name="targetMethod" value="deleteOrderUnpaid"/>-->
    <!--</bean>-->
    <!--<bean id="departtimingExecuteTrigger2"-->
    <!--class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">-->
    <!--<property name="jobDetail" ref="departtimingJobDetailExecute2"/>-->
    <!--&lt;!&ndash; 5分钟运行一次 &ndash;&gt;-->
    <!--<property name="cronExpression" value="0/120 * * * * ?"/>-->
    <!--</bean>-->
    <!-- 定时删除未支付订单结束 -->
    <!-- 执行定时任务开始  -->
    <bean lazy-init="false" autowire="no" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <ref bean="departtimingExecuteTrigger"/>
                <ref bean="departtimingExecuteTrigger2"/>
            </list>
        </property>
        <property name="startupDelay" value="5"/>
        <property name="taskExecutor" ref="executorpool"/>
    </bean>

    <!-- 执行定时任结束  -->
    <!--<bean id="SpringContextUtil" class="com.yhhis.controller.wxpay.util.SpringContextUtil"></bean>-->

</beans>