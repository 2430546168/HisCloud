
package org.tempurl;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 */
@WebServiceClient(name = "n_webservice", targetNamespace = "http://tempurl.org", wsdlLocation = "http://192.168.1.161/webservice/n_webservice.asmx?wsdl")
public class NWebservice
        extends Service {

    private final static URL NWEBSERVICE_WSDL_LOCATION;
    private final static WebServiceException NWEBSERVICE_EXCEPTION;
    private final static QName NWEBSERVICE_QNAME = new QName("http://tempurl.org", "n_webservice");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://192.168.1.161/webservice/n_webservice.asmx?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        NWEBSERVICE_WSDL_LOCATION = url;
        NWEBSERVICE_EXCEPTION = e;
    }

    public NWebservice() {
        super(__getWsdlLocation(), NWEBSERVICE_QNAME);
    }

    public NWebservice(WebServiceFeature... features) {
        super(__getWsdlLocation(), NWEBSERVICE_QNAME, features);
    }

    public NWebservice(URL wsdlLocation) {
        super(wsdlLocation, NWEBSERVICE_QNAME);
    }

    public NWebservice(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, NWEBSERVICE_QNAME, features);
    }

    public NWebservice(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public NWebservice(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    private static URL __getWsdlLocation() {
        if (NWEBSERVICE_EXCEPTION != null) {
            throw NWEBSERVICE_EXCEPTION;
        }
        return NWEBSERVICE_WSDL_LOCATION;
    }

    /**
     * @return returns NWebserviceSoap
     */
    @WebEndpoint(name = "n_webserviceSoap")
    public NWebserviceSoap getNWebserviceSoap() {
        return super.getPort(new QName("http://tempurl.org", "n_webserviceSoap"), NWebserviceSoap.class);
    }

    /**
     * @param features A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return returns NWebserviceSoap
     */
    @WebEndpoint(name = "n_webserviceSoap")
    public NWebserviceSoap getNWebserviceSoap(WebServiceFeature... features) {
        return super.getPort(new QName("http://tempurl.org", "n_webserviceSoap"), NWebserviceSoap.class, features);
    }

}
